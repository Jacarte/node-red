
const BLOCKLIST = [
    ['fs', `${__dirname}/../javy_js/fs.js`],
    ['https', `${__dirname}/../javy_js/https.js`],
    ['os', `${__dirname}/../javy_js/os.js`],
    ['process', `${__dirname}/../javy_js/process.js`],
    ['wasi', `${__dirname}/../javy_js/wasi.js`],
]

// rollup-plugin-my-example.js
export default function customResolver () {
    return {
      name: 'custom-resolver', // this name will show up in logs and errors
      resolveId ( source ) {
        // Check if the source is in the blocklist
        for (let i = 0; i < BLOCKLIST.length; i++) {
            if (BLOCKLIST[i][0] === source) {
                console.log("Blocking ", source);
                return BLOCKLIST[i][1];
            }
        }
        return null; // other ids should be handled as usually
      },
      load(id) {
        return null; // other ids should be handled as usually
      }
    };
  }
  
  // rollup.config.js
  /*
  import myExample from './rollup-plugin-my-example.js';
  export default ({
    input: 'virtual-module', // resolved by our plugin
    plugins: [myExample()],
    output: [{
      file: 'bundle.js',
      format: 'es'
    }]
  });*/