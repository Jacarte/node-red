import commonjs from '@rollup/plugin-commonjs';
import json from "@rollup/plugin-json";
import builtins from 'rollup-plugin-node-builtins';
import customResolver from './custom-resolver.js';
import { nodeResolve } from '@rollup/plugin-node-resolve';
import resolve from '@rollup/plugin-node-resolve';
import solve from "./solve.js";

// Our plugins
// import JavyBuiltin from "../plugins/javy-fs.js";

export default {
  //input: '70-WJSON.logic.js', // your main entry point
  output: {
    // exports: 'named',
    format: 'cjs',  // output format compatible with Javy,
    plugins: [
      // solve()
    ]
  },
  plugins: [
    customResolver(),
    resolve({
      browser: true,
      preferBuiltins: false,

    }),
    commonjs({
      // ignoreGlobal: true
    }), 
    // so Rollup can convert `node_modules` to an ES module,
    builtins(),
    [nodeResolve({
      browser: true,
      mainFields: ['browser', 'module'],
    })],
    json(), // To load json
    // nodeGlobals(), // Solve process access
     // so Rollup can find `node_modules`
  ],
};